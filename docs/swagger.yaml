definitions:
  Book:
    properties:
      author:
        description: '@example George Orwell'
        example: George Orwell
        type: string
      created_at:
        type: string
      id:
        description: '@example 1'
        example: 1
        type: integer
      title:
        description: '@example 1984'
        example: "1984"
        type: string
    type: object
info:
  contact: {}
paths:
  /books:
    get:
      description: Get all books from the library
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/Book'
            type: array
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: List all books
      tags:
      - books
    post:
      consumes:
      - application/json
      description: Add a new book to the library
      parameters:
      - description: Book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/Book'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/Book'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal server error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Create a new book
      tags:
      - books
  /books/{id}:
    put:
      consumes:
      - application/json
      description: Update book details by ID
      parameters:
      - description: Book ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated book data
        in: body
        name: book
        required: true
        schema:
          $ref: '#/definitions/Book'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Book'
        "400":
          description: Invalid input
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Book not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Update a book
      tags:
      - books
swagger: "2.0"
